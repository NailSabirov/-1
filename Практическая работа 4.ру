import numpy as np
from scipy.optimize import minimize
import matplotlib.pyplot as plt

def func(x):
    return x**4 + 6*x**3 + 3*x**2 - 8*x + 1

min_result = minimize(func, 0, bounds=[(-5, 5)])
min_x = min_result.x
min_val = min_result.fun

max_result = minimize(lambda x: -func(x), 0, bounds=[(-5, 5)])
max_x = max_result.x
max_val = -max_result.fun

print("Наименьшее значение функции f(x) на отрезке [-5, 5]:", min_val)
print("Достигается при x =", min_x[0])
print("Наибольшее значение функции f(x) на отрезке [-5, 5]:", max_val)
print("Достигается при x =", max_x[0])

x = np.linspace(-5, 5, 100)
y = func(x)

plt.figure()
plt.plot(x, y, label='f(x) = x^4 + 6*x^3 + 3*x^2 - 8*x + 1')
plt.scatter([min_x[0], max_x[0]], [min_val, max_val], color='red', label='Min/Max')
plt.xlabel('x')
plt.ylabel('f(x)')
plt.title('График функции f(x) = x^4 + 6*x^3 + 3*x^2 - 8*x + 1')
plt.legend()
plt.grid()
plt.show()
